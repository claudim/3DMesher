// Copyright (c) 2020-2021 Univaq (Italy)
// All rights reserved.
//
// Author(s): Claudia Di Marco <dimarco.claud@gmail.com>, Riccardo Mantini <mantini.riccardo@gmail.com>
//
//******************************************************************************
// File Description :
// Univaq Split From Tet algorithm for the generation of a Hex Mesh.
//******************************************************************************


#ifndef INC_3DMESHER_UNIVAQSPLITFROMTETALGORITHM_H
#define INC_3DMESHER_UNIVAQSPLITFROMTETALGORITHM_H

#include "DelaunayCGALTetMeshAlgorithm.h"
#include "HexMesh_from_TetMesh_maker.h"

typedef CGAL::Exact_predicates_inexact_constructions_kernel K;
typedef CGAL::Mesh_polyhedron_3<K>::type Polyhedron;

/**
 * @brief Execute the Univaq Split From Tet algorithm for the generation of a Hex Mesh.
 *
 * @file UnivaqSplitFromTetAlgorithm.h
 * @class UnivaqSplitFromTetAlgorithm
 */
class UnivaqSplitFromTetAlgorithm {

public:
    /**
     * @brief Execute the Univaq Split From Tet algorithm with a specified maximum edge dimension.
     *
     * @param polyhedron The polyhedron
     * @param hex_mesh The hexahedral mesh generated by the algorithm.
     * @param max_edge_dimension The 2*maximum edge dimension for an edge in the mesh.
     */
    void run(const Polyhedron& polyhedron, LCC_3& hex_mesh, double max_edge_dimension);

    /**
     * @brief Execute the Univaq Split From Tet algorithm.
     *
     * @param polyhedron The polyhedron
     * @param hex_mesh The hexahedral mesh generated by the algorithm.
     */
    void run(const Polyhedron& polyhedron, LCC_3& hex_mesh);
};


#endif //INC_3DMESHER_UNIVAQSPLITFROMTETALGORITHM_H
