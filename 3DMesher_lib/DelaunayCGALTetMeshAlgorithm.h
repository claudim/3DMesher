// Copyright (c) 2020-2021 Univaq (Italy)
// All rights reserved.
//
// Author(s): Claudia Di Marco <dimarco.claud@gmail.com>, Riccardo Mantini <mantini.riccardo@gmail.com>
//
//******************************************************************************
// File Description :
// Delaunay Tet Mesh algorithm for the generation of a Tet Mesh.
//******************************************************************************

#ifndef INC_3DMESHER_DELAUNAYCGALTETMESHALGORITHM_H
#define INC_3DMESHER_DELAUNAYCGALTETMESHALGORITHM_H

#include <CGAL/Mesh_triangulation_3.h>
#include <CGAL/Polyhedral_mesh_domain_with_features_3.h>
#include <CGAL/Mesh_complex_3_in_triangulation_3.h>
#include <CGAL/Mesh_criteria_3.h>
#include <CGAL/make_mesh_3.h>

typedef CGAL::Exact_predicates_inexact_constructions_kernel K;
typedef CGAL::Mesh_polyhedron_3<K>::type Polyhedron;
typedef CGAL::Polyhedral_mesh_domain_with_features_3<K> Mesh_Domain;
typedef CGAL::Mesh_triangulation_3<Mesh_Domain, CGAL::Default>::type Tr;
typedef CGAL::Mesh_complex_3_in_triangulation_3<Tr> C3t3;
typedef CGAL::Mesh_criteria_3<Tr> Mesh_Criteria;

using namespace CGAL::parameters;
/**
 * @brief Execute the Delaunay algorithm for the generation of a Tet Mesh.
 *
 * @file DelaunayCGALTetMeshAlgorithm.h
 * @class DelaunayCGALTetMeshAlgorithm
 */
class DelaunayCGALTetMeshAlgorithm {

public:
    /**
     * @brief Execute the Delaunay algorithm with a specified maximum edge dimension.
     *
     * @param polyhedron The polyhedron
     * @param tet_mesh The mesh generated by the algorithm.
     * @param max_edge_dimension The maximum edge dimension for an edge in the mesh.
     */
    void run(const Polyhedron& polyhedron, C3t3& tet_mesh, double max_edge_dimension);

    /**
     * @brief Execute the Delaunay algorithm.
     *
     * @param polyhedron The polyhedron
     * @param tet_mesh The mesh generated by the algorithm.
     */
    void run(const Polyhedron& polyhedron, C3t3& tet_mesh);
};


#endif //INC_3DMESHER_DELAUNAYCGALTETMESHALGORITHM_H
